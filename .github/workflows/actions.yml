name: Github Actions pipeline testing
on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS region for assignment'
        required: true
        default: 'eu-central-1'
        type: string
      bucket:
        description: 'S3 bucket for tfstate files (NOT PROVISIONED VIA TERRAFORM'
        required: true
        default: 'p81-gilad-state-files-bucket'
        type: string
      profile_name:
        description: 'AWS profile for assignment'
        required: true
        default: 'default'
        type: string
      statefile_lock_table:
        description: 'AWS DynamoDB table for statefile locks'
        required: true
        default: 'p81-gilad-statefile-locks-table'
        type: string
      account_number:
        description: 'AWS account number for assignment'
        required: true
        default: '329082085800'
        type: string
      iam_user_name:
        description: 'AWS IAM user name for assignment'
        required: true
        default: 'gilad-tayeb'
        type: string

jobs:
  pre-configurations:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - run: |
        python -m pip install --upgrade pip
        ls -lah
        pip3 install -r ./python/requirements.txt
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Clean existing AWS CLI
      run: |
        sudo rm -rf /usr/local/aws-cli*
    - name: Install AWS CLI from
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" > /dev/null
        unzip awscliv2.zip > /dev/null
        sudo ./aws/install > /dev/null
        mkdir -p ~/.aws &&
        echo "[${{inputs.profile_name}}]" > ~/.aws/credentials &&
        echo "aws_access_key_id=${{ env.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials &&
        echo "aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
    - name: Install Terraform 1.5.7
      run: |
        wget -q https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
        unzip terraform_1.5.7_linux_amd64.zip
        sudo mv terraform /usr/local/bin
        terraform -version
    - name: Install Terragrunt
      run: |
        cd /tmp
        wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v0.54.21/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
        terragrunt --version
  Prepare_bucket_and_Dynamodb_table_for_state:
    runs-on: ubuntu-latest
    needs: pre-configurations
    steps:
      - uses: actions/checkout@v4
      - name: Execute the bucket and dynamodb table creation
        run: |
          ls -lath
          cd python
          ls -thal
          chmod +x *.py
          ./pre-configurations.py
        env:
          REGION: ${{ inputs.region }}
          BUCKET: ${{ inputs.bucket }}
          PROFILE_NAME: ${{ inputs.profile_name }}
          TABLE_NAME: ${{ inputs.statefile_lock_table }}
          ACCOUNT_NUMBER: ${{ inputs.account_number }}
          IAM_USER_NAME: ${{ inputs.iam_user_name }}

    
